{"ast":null,"code":"import React,{useState,useEffect}from'react';import{BrowserRouter as Router,Routes,Route}from'react-router-dom';import{io}from'socket.io-client';import HomePage from'./components/HomePage';import GameLobby from'./components/GameLobby';import GameRoom from'./components/GameRoom';import GameContext from'./contexts/GameContext';import SocketContext from'./contexts/SocketContext';import'./styles/App.css';// 백엔드 서버 URL\nimport{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const BACKEND_URL='https://muksa.onrender.com';const App=()=>{const[socket,setSocket]=useState(null);const[gameState,setGameState]=useState({isConnected:false,playerId:null,playerName:'',gameId:null,players:[],currentRound:0,animal:null,location:null,gameStatus:'waiting',messages:[]});useEffect(()=>{// 소켓 연결 설정\nconst socketConnection=io(BACKEND_URL,{withCredentials:true,transports:['websocket'],reconnection:true,reconnectionAttempts:5,reconnectionDelay:1000});// 소켓 이벤트 리스너 설정\nsocketConnection.on('connect',()=>{console.log('소켓 서버에 연결되었습니다.');setGameState(prev=>({...prev,isConnected:true,playerId:socketConnection.id}));});socketConnection.on('connect_error',error=>{console.error('소켓 연결 오류:',error);});socketConnection.on('disconnect',reason=>{console.log('소켓 연결이 끊어졌습니다:',reason);setGameState(prev=>({...prev,isConnected:false}));});// 소켓 객체 저장\nsetSocket(socketConnection);// 컴포넌트 언마운트 시 소켓 연결 해제\nreturn()=>{if(socketConnection){console.log('소켓 연결을 해제합니다.');socketConnection.disconnect();}};},[]);return/*#__PURE__*/_jsx(SocketContext.Provider,{value:{socket,setSocket},children:/*#__PURE__*/_jsx(GameContext.Provider,{value:{gameState,setGameState},children:/*#__PURE__*/_jsx(Router,{children:/*#__PURE__*/_jsx(\"div\",{className:\"app-container\",children:/*#__PURE__*/_jsxs(Routes,{children:[/*#__PURE__*/_jsx(Route,{path:\"/\",element:/*#__PURE__*/_jsx(HomePage,{})}),/*#__PURE__*/_jsx(Route,{path:\"/lobby\",element:/*#__PURE__*/_jsx(GameLobby,{})}),/*#__PURE__*/_jsx(Route,{path:\"/game/:gameId\",element:/*#__PURE__*/_jsx(GameRoom,{})})]})})})})});};export default App;","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Router","Routes","Route","io","HomePage","GameLobby","GameRoom","GameContext","SocketContext","jsx","_jsx","jsxs","_jsxs","BACKEND_URL","App","socket","setSocket","gameState","setGameState","isConnected","playerId","playerName","gameId","players","currentRound","animal","location","gameStatus","messages","socketConnection","withCredentials","transports","reconnection","reconnectionAttempts","reconnectionDelay","on","console","log","prev","id","error","reason","disconnect","Provider","value","children","className","path","element"],"sources":["C:/Users/USER/Desktop/ssssss/frontend/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\nimport { io } from 'socket.io-client';\nimport HomePage from './components/HomePage';\nimport GameLobby from './components/GameLobby';\nimport GameRoom from './components/GameRoom';\nimport GameContext from './contexts/GameContext';\nimport SocketContext from './contexts/SocketContext';\nimport './styles/App.css';\n\n// 백엔드 서버 URL\nconst BACKEND_URL = 'https://muksa.onrender.com';\n\nconst App = () => {\n  const [socket, setSocket] = useState(null);\n  const [gameState, setGameState] = useState({\n    isConnected: false,\n    playerId: null,\n    playerName: '',\n    gameId: null,\n    players: [],\n    currentRound: 0,\n    animal: null,\n    location: null,\n    gameStatus: 'waiting',\n    messages: []\n  });\n\n  useEffect(() => {\n    // 소켓 연결 설정\n    const socketConnection = io(BACKEND_URL, {\n      withCredentials: true,\n      transports: ['websocket'],\n      reconnection: true,\n      reconnectionAttempts: 5,\n      reconnectionDelay: 1000\n    });\n\n    // 소켓 이벤트 리스너 설정\n    socketConnection.on('connect', () => {\n      console.log('소켓 서버에 연결되었습니다.');\n      setGameState(prev => ({\n        ...prev,\n        isConnected: true,\n        playerId: socketConnection.id\n      }));\n    });\n\n    socketConnection.on('connect_error', (error) => {\n      console.error('소켓 연결 오류:', error);\n    });\n\n    socketConnection.on('disconnect', (reason) => {\n      console.log('소켓 연결이 끊어졌습니다:', reason);\n      setGameState(prev => ({\n        ...prev,\n        isConnected: false\n      }));\n    });\n\n    // 소켓 객체 저장\n    setSocket(socketConnection);\n\n    // 컴포넌트 언마운트 시 소켓 연결 해제\n    return () => {\n      if (socketConnection) {\n        console.log('소켓 연결을 해제합니다.');\n        socketConnection.disconnect();\n      }\n    };\n  }, []);\n\n  return (\n    <SocketContext.Provider value={{ socket, setSocket }}>\n      <GameContext.Provider value={{ gameState, setGameState }}>\n        <Router>\n          <div className=\"app-container\">\n            <Routes>\n              <Route path=\"/\" element={<HomePage />} />\n              <Route path=\"/lobby\" element={<GameLobby />} />\n              <Route path=\"/game/:gameId\" element={<GameRoom />} />\n            </Routes>\n          </div>\n        </Router>\n      </GameContext.Provider>\n    </SocketContext.Provider>\n  );\n};\n\nexport default App;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}