{"ast":null,"code":"import React,{useState,useContext,useEffect}from'react';import{useNavigate}from'react-router-dom';import GameContext from'../contexts/GameContext';import SocketContext from'../contexts/SocketContext';import'../styles/GameLobby.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const GameLobby=()=>{const{gameState,setGameState}=useContext(GameContext);const{socket}=useContext(SocketContext);const navigate=useNavigate();const[rooms,setRooms]=useState([]);const[newRoomName,setNewRoomName]=useState('');const[isCreatingRoom,setIsCreatingRoom]=useState(false);useEffect(()=>{// 실제 구현에서는 소켓을 통해 방 목록을 가져옵니다\n// 여기서는 더미 데이터를 사용합니다\nconst dummyRooms=[{id:'1',name:'초보자 환영',players:3,maxPlayers:12,status:'waiting'},{id:'2',name:'고수만',players:8,maxPlayers:12,status:'waiting'},{id:'3',name:'즐겜방',players:5,maxPlayers:12,status:'playing'}];setRooms(dummyRooms);// 플레이어 이름이 없으면 홈페이지로 리다이렉트\nif(!gameState.playerName){navigate('/');}},[gameState.playerName,navigate]);const handleCreateRoom=()=>{setIsCreatingRoom(true);};const handleRoomNameChange=e=>{setNewRoomName(e.target.value);};const handleSubmitRoom=e=>{e.preventDefault();if(newRoomName.trim()){// 실제 구현에서는 소켓을 통해 방 생성 요청을 보냅니다\nconst newRoomId=Date.now().toString();setGameState({...gameState,gameId:newRoomId});navigate(`/game/${newRoomId}`);}};const handleJoinRoom=roomId=>{// 실제 구현에서는 소켓을 통해 방 참가 요청을 보냅니다\nsetGameState({...gameState,gameId:roomId});navigate(`/game/${roomId}`);};const handleBackToHome=()=>{navigate('/');};return/*#__PURE__*/_jsxs(\"div\",{className:\"lobby-container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"lobby-header\",children:[/*#__PURE__*/_jsx(\"h1\",{children:\"\\uAC8C\\uC784 \\uB85C\\uBE44\"}),/*#__PURE__*/_jsxs(\"p\",{children:[\"\\uD658\\uC601\\uD569\\uB2C8\\uB2E4, \",/*#__PURE__*/_jsx(\"strong\",{children:gameState.playerName}),\"\\uB2D8!\"]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"lobby-actions\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"primary\",onClick:handleCreateRoom,children:\"\\uC0C8 \\uAC8C\\uC784 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{className:\"secondary\",onClick:handleBackToHome,children:\"\\uD648\\uC73C\\uB85C \\uB3CC\\uC544\\uAC00\\uAE30\"})]}),isCreatingRoom&&/*#__PURE__*/_jsxs(\"div\",{className:\"create-room-form card\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uC0C8 \\uAC8C\\uC784 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsxs(\"form\",{onSubmit:handleSubmitRoom,children:[/*#__PURE__*/_jsxs(\"div\",{className:\"form-group\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"roomName\",children:\"\\uBC29 \\uC774\\uB984\"}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",id:\"roomName\",value:newRoomName,onChange:handleRoomNameChange,placeholder:\"\\uBC29 \\uC774\\uB984\\uC744 \\uC785\\uB825\\uD558\\uC138\\uC694\",required:true})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"form-actions\",children:[/*#__PURE__*/_jsx(\"button\",{type:\"submit\",className:\"primary\",children:\"\\uBC29 \\uB9CC\\uB4E4\\uAE30\"}),/*#__PURE__*/_jsx(\"button\",{type:\"button\",className:\"secondary\",onClick:()=>setIsCreatingRoom(false),children:\"\\uCDE8\\uC18C\"})]})]})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-list-container\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uCC38\\uAC00 \\uAC00\\uB2A5\\uD55C \\uAC8C\\uC784\"}),rooms.length===0?/*#__PURE__*/_jsx(\"p\",{className:\"no-rooms\",children:\"\\uD604\\uC7AC \\uCC38\\uAC00 \\uAC00\\uB2A5\\uD55C \\uAC8C\\uC784\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"}):/*#__PURE__*/_jsx(\"div\",{className:\"room-list\",children:rooms.map(room=>/*#__PURE__*/_jsxs(\"div\",{className:`room-card ${room.status==='playing'?'playing':''}`,children:[/*#__PURE__*/_jsx(\"h3\",{children:room.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"room-info\",children:[/*#__PURE__*/_jsxs(\"span\",{children:[\"\\uD50C\\uB808\\uC774\\uC5B4: \",room.players,\"/\",room.maxPlayers]}),/*#__PURE__*/_jsx(\"span\",{className:`room-status ${room.status}`,children:room.status==='waiting'?'대기중':'게임중'})]}),/*#__PURE__*/_jsx(\"button\",{className:\"primary join-button\",onClick:()=>handleJoinRoom(room.id),disabled:room.status==='playing'||room.players>=room.maxPlayers,children:room.status==='playing'?'게임중':room.players>=room.maxPlayers?'정원초과':'참가하기'})]},room.id))})]})]});};export default GameLobby;","map":{"version":3,"names":["React","useState","useContext","useEffect","useNavigate","GameContext","SocketContext","jsx","_jsx","jsxs","_jsxs","GameLobby","gameState","setGameState","socket","navigate","rooms","setRooms","newRoomName","setNewRoomName","isCreatingRoom","setIsCreatingRoom","dummyRooms","id","name","players","maxPlayers","status","playerName","handleCreateRoom","handleRoomNameChange","e","target","value","handleSubmitRoom","preventDefault","trim","newRoomId","Date","now","toString","gameId","handleJoinRoom","roomId","handleBackToHome","className","children","onClick","onSubmit","htmlFor","type","onChange","placeholder","required","length","map","room","disabled"],"sources":["C:/Users/USER/Desktop/ssssss/frontend/src/components/GameLobby.js"],"sourcesContent":["import React, { useState, useContext, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport GameContext from '../contexts/GameContext';\nimport SocketContext from '../contexts/SocketContext';\nimport '../styles/GameLobby.css';\n\nconst GameLobby = () => {\n  const { gameState, setGameState } = useContext(GameContext);\n  const { socket } = useContext(SocketContext);\n  const navigate = useNavigate();\n  \n  const [rooms, setRooms] = useState([]);\n  const [newRoomName, setNewRoomName] = useState('');\n  const [isCreatingRoom, setIsCreatingRoom] = useState(false);\n\n  useEffect(() => {\n    // 실제 구현에서는 소켓을 통해 방 목록을 가져옵니다\n    // 여기서는 더미 데이터를 사용합니다\n    const dummyRooms = [\n      { id: '1', name: '초보자 환영', players: 3, maxPlayers: 12, status: 'waiting' },\n      { id: '2', name: '고수만', players: 8, maxPlayers: 12, status: 'waiting' },\n      { id: '3', name: '즐겜방', players: 5, maxPlayers: 12, status: 'playing' }\n    ];\n    setRooms(dummyRooms);\n    \n    // 플레이어 이름이 없으면 홈페이지로 리다이렉트\n    if (!gameState.playerName) {\n      navigate('/');\n    }\n  }, [gameState.playerName, navigate]);\n\n  const handleCreateRoom = () => {\n    setIsCreatingRoom(true);\n  };\n\n  const handleRoomNameChange = (e) => {\n    setNewRoomName(e.target.value);\n  };\n\n  const handleSubmitRoom = (e) => {\n    e.preventDefault();\n    if (newRoomName.trim()) {\n      // 실제 구현에서는 소켓을 통해 방 생성 요청을 보냅니다\n      const newRoomId = Date.now().toString();\n      setGameState({\n        ...gameState,\n        gameId: newRoomId\n      });\n      navigate(`/game/${newRoomId}`);\n    }\n  };\n\n  const handleJoinRoom = (roomId) => {\n    // 실제 구현에서는 소켓을 통해 방 참가 요청을 보냅니다\n    setGameState({\n      ...gameState,\n      gameId: roomId\n    });\n    navigate(`/game/${roomId}`);\n  };\n\n  const handleBackToHome = () => {\n    navigate('/');\n  };\n\n  return (\n    <div className=\"lobby-container\">\n      <div className=\"lobby-header\">\n        <h1>게임 로비</h1>\n        <p>환영합니다, <strong>{gameState.playerName}</strong>님!</p>\n      </div>\n      \n      <div className=\"lobby-actions\">\n        <button className=\"primary\" onClick={handleCreateRoom}>\n          새 게임 만들기\n        </button>\n        <button className=\"secondary\" onClick={handleBackToHome}>\n          홈으로 돌아가기\n        </button>\n      </div>\n      \n      {isCreatingRoom && (\n        <div className=\"create-room-form card\">\n          <h2>새 게임 만들기</h2>\n          <form onSubmit={handleSubmitRoom}>\n            <div className=\"form-group\">\n              <label htmlFor=\"roomName\">방 이름</label>\n              <input\n                type=\"text\"\n                id=\"roomName\"\n                value={newRoomName}\n                onChange={handleRoomNameChange}\n                placeholder=\"방 이름을 입력하세요\"\n                required\n              />\n            </div>\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"primary\">\n                방 만들기\n              </button>\n              <button \n                type=\"button\" \n                className=\"secondary\"\n                onClick={() => setIsCreatingRoom(false)}\n              >\n                취소\n              </button>\n            </div>\n          </form>\n        </div>\n      )}\n      \n      <div className=\"room-list-container\">\n        <h2>참가 가능한 게임</h2>\n        {rooms.length === 0 ? (\n          <p className=\"no-rooms\">현재 참가 가능한 게임이 없습니다.</p>\n        ) : (\n          <div className=\"room-list\">\n            {rooms.map(room => (\n              <div key={room.id} className={`room-card ${room.status === 'playing' ? 'playing' : ''}`}>\n                <h3>{room.name}</h3>\n                <div className=\"room-info\">\n                  <span>플레이어: {room.players}/{room.maxPlayers}</span>\n                  <span className={`room-status ${room.status}`}>\n                    {room.status === 'waiting' ? '대기중' : '게임중'}\n                  </span>\n                </div>\n                <button \n                  className=\"primary join-button\"\n                  onClick={() => handleJoinRoom(room.id)}\n                  disabled={room.status === 'playing' || room.players >= room.maxPlayers}\n                >\n                  {room.status === 'playing' ? '게임중' : \n                   room.players >= room.maxPlayers ? '정원초과' : '참가하기'}\n                </button>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default GameLobby;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}