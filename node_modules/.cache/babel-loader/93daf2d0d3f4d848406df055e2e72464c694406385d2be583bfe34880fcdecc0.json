{"ast":null,"code":"import{io}from'socket.io-client';// 백엔드 서버 URL\nconst BACKEND_URL='https://muksa.onrender.com';// 수정: URL 일관성 확보\nclass GameSocketService{constructor(socket){if(!socket){this.socket=io(BACKEND_URL,{transports:['websocket','polling'],// 폴링 백업 추가\nwithCredentials:true,// 크로스 도메인 지원\nautoConnect:true,// 자동 연결\nreconnectionAttempts:5,// 재연결 시도 횟수\nreconnectionDelay:1000,// 재연결 지연 시간(ms)\ntimeout:20000// 연결 타임아웃 늘림\n});console.log('새 소켓 연결 생성');}else{this.socket=socket;console.log('기존 소켓 연결 사용');}this.eventHandlers=new Map();// 기본 연결 이벤트 등록\nthis.socket.on('connect',()=>{console.log('[소켓 연결 성공] ID:',this.socket.id);});this.socket.on('connect_error',error=>{console.error('[소켓 연결 오류]',error);});this.socket.on('disconnect',reason=>{console.log('[소켓 연결 끊김]',reason);});}// ✅ 서버로 \"로비 입장\" 요청 보내기\nenterLobby(playerName,callback){console.log('[로비 입장 요청]',playerName);this.socket.emit('enterLobby',{playerName});this.registerHandler('gamesList',callback);}// ✅ 서버로 \"게임 생성\" 요청 보내기\ncreateGame(gameName,callback){console.log('[게임 생성 요청]',gameName);this.socket.emit('createGame',{gameName});this.registerHandler('gameCreated',callback);}// ✅ 서버로 \"게임 참가\" 요청 보내기\njoinGame(gameId,playerName,callback){console.log('[게임 참가 요청]',gameId,playerName);this.socket.emit('joinGame',{gameId,playerName});this.registerHandler('gameJoined',callback);}// ✅ 준비 상태 변경\ntoggleReady(callback){console.log('[준비 상태 토글]');this.socket.emit('toggleReady');if(callback)this.registerHandler('readyToggled',callback);}// ✅ 게임 시작 요청\nstartGame(gameId,callback){console.log('[게임 시작 요청]',gameId);this.socket.emit('startGame',{gameId});this.registerHandler('gameStarted',callback);}// ✅ 플레이어 행동 제출\nsubmitAction(action,callback){console.log('[행동 제출]',action);this.socket.emit('submitAction',action);this.registerHandler('actionConfirmed',callback);}// ✅ 채팅 메시지 전송\nsendMessage(gameId,content){console.log('[메시지 전송]',gameId,content);if(!this.socket.connected){console.error('[메시지 전송 실패] 소켓 연결이 없습니다');return false;}this.socket.emit('sendMessage',{gameId,content});return true;}// ✅ 게임 나가기\nleaveGame(callback){console.log('[게임 나가기 요청]');this.socket.emit('leaveGame');if(callback)this.registerHandler('leftGame',callback);}// ✅ 이벤트 핸들러 등록\nregisterHandler(event,callback){console.log('[이벤트 등록]',event);if(this.eventHandlers.has(event)){this.socket.off(event,this.eventHandlers.get(event));}this.eventHandlers.set(event,callback);this.socket.on(event,callback);}// ✅ 이벤트 핸들러 해제\nremoveHandler(event){console.log('[이벤트 핸들러 제거]',event);if(this.eventHandlers.has(event)){this.socket.off(event,this.eventHandlers.get(event));this.eventHandlers.delete(event);}}// ✅ 모든 핸들러 해제\nremoveAllHandlers(){console.log('[모든 이벤트 핸들러 제거]');this.eventHandlers.forEach((handler,event)=>{this.socket.off(event,handler);});this.eventHandlers.clear();}// ✅ 소켓 연결 상태 확인\nisConnected(){return this.socket&&this.socket.connected;}// ✅ 소켓 ID 가져오기\ngetSocketId(){return this.socket?this.socket.id:null;}// ✅ 소켓 연결 끊기\ndisconnect(){if(this.socket){console.log('[소켓 연결 해제]');this.socket.disconnect();}}// ✅ 소켓 다시 연결\nreconnect(){if(this.socket){console.log('[소켓 재연결 시도]');this.socket.connect();}}}export default GameSocketService;","map":{"version":3,"names":["io","BACKEND_URL","GameSocketService","constructor","socket","transports","withCredentials","autoConnect","reconnectionAttempts","reconnectionDelay","timeout","console","log","eventHandlers","Map","on","id","error","reason","enterLobby","playerName","callback","emit","registerHandler","createGame","gameName","joinGame","gameId","toggleReady","startGame","submitAction","action","sendMessage","content","connected","leaveGame","event","has","off","get","set","removeHandler","delete","removeAllHandlers","forEach","handler","clear","isConnected","getSocketId","disconnect","reconnect","connect"],"sources":["C:/Users/USER/Desktop/ssssss/frontend/src/services/GameSocketService.js"],"sourcesContent":["import { io } from 'socket.io-client';\n\n// 백엔드 서버 URL\nconst BACKEND_URL = 'https://muksa.onrender.com'; // 수정: URL 일관성 확보\n\nclass GameSocketService {\n  constructor(socket) {\n    if (!socket) {\n      this.socket = io(BACKEND_URL, {\n        transports: ['websocket', 'polling'],  // 폴링 백업 추가\n        withCredentials: true,      // 크로스 도메인 지원\n        autoConnect: true,          // 자동 연결\n        reconnectionAttempts: 5,    // 재연결 시도 횟수\n        reconnectionDelay: 1000,    // 재연결 지연 시간(ms)\n        timeout: 20000              // 연결 타임아웃 늘림\n      });\n      console.log('새 소켓 연결 생성');\n    } else {\n      this.socket = socket;\n      console.log('기존 소켓 연결 사용');\n    }\n\n    this.eventHandlers = new Map();\n\n    // 기본 연결 이벤트 등록\n    this.socket.on('connect', () => {\n      console.log('[소켓 연결 성공] ID:', this.socket.id);\n    });\n\n    this.socket.on('connect_error', (error) => {\n      console.error('[소켓 연결 오류]', error);\n    });\n\n    this.socket.on('disconnect', (reason) => {\n      console.log('[소켓 연결 끊김]', reason);\n    });\n  }\n\n  // ✅ 서버로 \"로비 입장\" 요청 보내기\n  enterLobby(playerName, callback) {\n    console.log('[로비 입장 요청]', playerName);\n    this.socket.emit('enterLobby', { playerName });\n    this.registerHandler('gamesList', callback);\n  }\n\n  // ✅ 서버로 \"게임 생성\" 요청 보내기\n  createGame(gameName, callback) {\n    console.log('[게임 생성 요청]', gameName);\n    this.socket.emit('createGame', { gameName });\n    this.registerHandler('gameCreated', callback);\n  }\n\n  // ✅ 서버로 \"게임 참가\" 요청 보내기\n  joinGame(gameId, playerName, callback) {\n    console.log('[게임 참가 요청]', gameId, playerName);\n    this.socket.emit('joinGame', { gameId, playerName });\n    this.registerHandler('gameJoined', callback);\n  }\n\n  // ✅ 준비 상태 변경\n  toggleReady(callback) {\n    console.log('[준비 상태 토글]');\n    this.socket.emit('toggleReady');\n    if (callback) this.registerHandler('readyToggled', callback);\n  }\n\n  // ✅ 게임 시작 요청\n  startGame(gameId, callback) {\n    console.log('[게임 시작 요청]', gameId);\n    this.socket.emit('startGame', { gameId });\n    this.registerHandler('gameStarted', callback);\n  }\n\n  // ✅ 플레이어 행동 제출\n  submitAction(action, callback) {\n    console.log('[행동 제출]', action);\n    this.socket.emit('submitAction', action);\n    this.registerHandler('actionConfirmed', callback);\n  }\n\n  // ✅ 채팅 메시지 전송\n  sendMessage(gameId, content) {\n    console.log('[메시지 전송]', gameId, content);\n    if (!this.socket.connected) {\n      console.error('[메시지 전송 실패] 소켓 연결이 없습니다');\n      return false;\n    }\n    this.socket.emit('sendMessage', { gameId, content });\n    return true;\n  }\n\n  // ✅ 게임 나가기\n  leaveGame(callback) {\n    console.log('[게임 나가기 요청]');\n    this.socket.emit('leaveGame');\n    if (callback) this.registerHandler('leftGame', callback);\n  }\n\n  // ✅ 이벤트 핸들러 등록\n  registerHandler(event, callback) {\n    console.log('[이벤트 등록]', event);\n    if (this.eventHandlers.has(event)) {\n      this.socket.off(event, this.eventHandlers.get(event));\n    }\n    this.eventHandlers.set(event, callback);\n    this.socket.on(event, callback);\n  }\n\n  // ✅ 이벤트 핸들러 해제\n  removeHandler(event) {\n    console.log('[이벤트 핸들러 제거]', event);\n    if (this.eventHandlers.has(event)) {\n      this.socket.off(event, this.eventHandlers.get(event));\n      this.eventHandlers.delete(event);\n    }\n  }\n\n  // ✅ 모든 핸들러 해제\n  removeAllHandlers() {\n    console.log('[모든 이벤트 핸들러 제거]');\n    this.eventHandlers.forEach((handler, event) => {\n      this.socket.off(event, handler);\n    });\n    this.eventHandlers.clear();\n  }\n\n  // ✅ 소켓 연결 상태 확인\n  isConnected() {\n    return this.socket && this.socket.connected;\n  }\n\n  // ✅ 소켓 ID 가져오기\n  getSocketId() {\n    return this.socket ? this.socket.id : null;\n  }\n\n  // ✅ 소켓 연결 끊기\n  disconnect() {\n    if (this.socket) {\n      console.log('[소켓 연결 해제]');\n      this.socket.disconnect();\n    }\n  }\n\n  // ✅ 소켓 다시 연결\n  reconnect() {\n    if (this.socket) {\n      console.log('[소켓 재연결 시도]');\n      this.socket.connect();\n    }\n  }\n}\n\nexport default GameSocketService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}